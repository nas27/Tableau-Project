<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='CauseSelector' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Drowning&quot;'>
        <calculation class='tableau' formula='&quot;Drowning&quot;' />
        <members>
          <member value='&quot;Acute hepatitis&quot;' />
          <member value='&quot;Alcohol use disorders&quot;' />
          <member value='&quot;Alzheimer&apos;s disease and other dementias&quot;' />
          <member value='&quot;Cardiovascular diseases&quot;' />
          <member value='&quot;Chronic kidney disease&quot;' />
          <member value='&quot;Chronic respiratory diseases&quot;' />
          <member value='&quot;Cirrhosis and other chronic liver diseases&quot;' />
          <member value='&quot;Conflict and terrorism&quot;' />
          <member value='&quot;Diabetes mellitus&quot;' />
          <member value='&quot;Diarrheal diseases&quot;' />
          <member value='&quot;Digestive diseases&quot;' />
          <member value='&quot;Drowning&quot;' />
          <member value='&quot;Drug use disorders&quot;' />
          <member value='&quot;Environmental heat and cold exposure&quot;' />
          <member value='&quot;Exposure to forces of nature&quot;' />
          <member value='&quot;Fire, heat, and hot substances&quot;' />
          <member value='&quot;HIV/AIDS&quot;' />
          <member value='&quot;Interpersonal violence&quot;' />
          <member value='&quot;Lower respiratory infections&quot;' />
          <member value='&quot;Malaria&quot;' />
          <member value='&quot;Maternal disorders&quot;' />
          <member value='&quot;Meningitis&quot;' />
          <member value='&quot;Neonatal disorders&quot;' />
          <member value='&quot;Neoplasms&quot;' />
          <member value='&quot;Number of executions (Amnesty International)&quot;' />
          <member value='&quot;Nutritional deficiencies&quot;' />
          <member value='&quot;Parkinson&apos;s disease&quot;' />
          <member value='&quot;Poisonings&quot;' />
          <member value='&quot;Protein-energy malnutrition&quot;' />
          <member value='&quot;Road injuries&quot;' />
          <member value='&quot;Self-harm&quot;' />
          <member value='&quot;Terrorism (deaths)&quot;' />
          <member value='&quot;Tuberculosis&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='20222703 Causes Of Death Clean Output V2.0' inline='true' name='federated.091u26n1vu7qvt191b1jc02r8eyg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='20222703 Causes Of Death Clean Output V2.0' name='textscan.01utfwt1kwzgvv113vo0u128xplp'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/nasta/Downloads/archive/20222703 Causes Of Death Clean Output V2.0.csv' dataRefreshTime='' directory='C:/Users/nasta/Downloads/archive' filename='C:/Users/nasta/AppData/Local/Temp/TableauTemp/0w50qkg1bh22a118qfnla169azpa/20222703 Causes Of Death Clean Output V2.0.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='f8948141-f820-4342-a9ac-a59aba59189d_Data' name='textscan.156z50s1ovacdl1go7m54047r3kh'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:\Users\nasta\Downloads\P_Data_Extract_From_World_Development_Indicators(2)\f8948141-f820-4342-a9ac-a59aba59189d_Data.csv' dataRefreshTime='' directory='C:/Users/nasta/Downloads/P_Data_Extract_From_World_Development_Indicators(2)' filename='C:/Users/nasta/AppData/Local/Temp/TableauTemp/1azqmzr0kjx03h15wzqke0iivs4e/f8948141-f820-4342-a9ac-a59aba59189d_Data.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Canada_Pop' name='excel-direct.01ne1xj0rt6nwh166plpy0fydkco'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Tableau-Project/Canada_Pop.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='WorldBank_Populations' name='textscan.153m1t90bcypu019hvbq910sz9c4'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='D:/Tableau-Project/Data/WorldBank_Populations.csv' dataRefreshTime='' directory='D:/Tableau-Project/Data' filename='C:/Users/nasta/AppData/Local/Temp/TableauTemp/0wq2yls1ppwzrj166t19b1klk4nh/WorldBank_Populations.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.01utfwt1kwzgvv113vo0u128xplp' name='20222703 Causes Of Death Clean Output V2.0.csv' table='[20222703 Causes Of Death Clean Output V2.0#csv]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:F10001:no:A1:F10001:1' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='Causes name' ordinal='0' />
            <column datatype='string' name='Causes Full Description' ordinal='1' />
            <column datatype='integer' name='Death Numbers' ordinal='2' />
            <column datatype='string' name='Entity' ordinal='3' />
            <column datatype='string' name='Code' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.01utfwt1kwzgvv113vo0u128xplp' name='20222703 Causes Of Death Clean Output V2.0.csv' table='[20222703 Causes Of Death Clean Output V2.0#csv]' type='table'>
            <columns character-set='UTF-8' gridOrigin='A1:F10001:no:A1:F10001:1' header='yes' locale='en_CA' separator=','>
              <column datatype='string' name='Causes name' ordinal='0' />
              <column datatype='string' name='Causes Full Description' ordinal='1' />
              <column datatype='integer' name='Death Numbers' ordinal='2' />
              <column datatype='string' name='Entity' ordinal='3' />
              <column datatype='string' name='Code' ordinal='4' />
              <column datatype='integer' name='Year' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.153m1t90bcypu019hvbq910sz9c4' name='WorldBank_Populations.csv' table='[WorldBank_Populations#csv$]' type='table'>
            <columns gridOrigin='A1:E6122:no:A1:E6122:2'>
              <column datatype='string' name='Country Name Country Name' ordinal='0' />
              <column datatype='string' name='Country Code Country Code' ordinal='1' />
              <column datatype='string' name='Series Name Series Name' ordinal='2' />
              <column datatype='integer' name='Year Year' ordinal='3' />
              <column datatype='integer' name='Population Population' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[20222703 Causes Of Death Clean Output V2.0.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F10001:no:A1:F10001:1&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[WorldBank_Populations.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E6122:no:A1:E6122:2&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>12240</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Causes name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Causes name]</local-name>
            <parent-name>[20222703 Causes Of Death Clean Output V2.0.csv]</parent-name>
            <remote-alias>Causes name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[20222703 Causes Of Death Clean Output V2.0.csv_2DC64585AFFD47B1AF6375B5A3ABA073]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Causes Full Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Causes Full Description]</local-name>
            <parent-name>[20222703 Causes Of Death Clean Output V2.0.csv]</parent-name>
            <remote-alias>Causes Full Description</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[20222703 Causes Of Death Clean Output V2.0.csv_2DC64585AFFD47B1AF6375B5A3ABA073]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death Numbers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Death Numbers]</local-name>
            <parent-name>[20222703 Causes Of Death Clean Output V2.0.csv]</parent-name>
            <remote-alias>Death Numbers</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[20222703 Causes Of Death Clean Output V2.0.csv_2DC64585AFFD47B1AF6375B5A3ABA073]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[20222703 Causes Of Death Clean Output V2.0.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[20222703 Causes Of Death Clean Output V2.0.csv_2DC64585AFFD47B1AF6375B5A3ABA073]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[20222703 Causes Of Death Clean Output V2.0.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[20222703 Causes Of Death Clean Output V2.0.csv_2DC64585AFFD47B1AF6375B5A3ABA073]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[20222703 Causes Of Death Clean Output V2.0.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[20222703 Causes Of Death Clean Output V2.0.csv_2DC64585AFFD47B1AF6375B5A3ABA073]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name Country Name]</local-name>
            <parent-name>[WorldBank_Populations.csv]</parent-name>
            <remote-alias>Country Name Country Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WorldBank_Populations.csv_2EAA8202A02E47CCB8CB691436284205]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code Country Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Code Country Code]</local-name>
            <parent-name>[WorldBank_Populations.csv]</parent-name>
            <remote-alias>Country Code Country Code</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WorldBank_Populations.csv_2EAA8202A02E47CCB8CB691436284205]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Series Name Series Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Series Name Series Name]</local-name>
            <parent-name>[WorldBank_Populations.csv]</parent-name>
            <remote-alias>Series Name Series Name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WorldBank_Populations.csv_2EAA8202A02E47CCB8CB691436284205]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year Year]</local-name>
            <parent-name>[WorldBank_Populations.csv]</parent-name>
            <remote-alias>Year Year</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WorldBank_Populations.csv_2EAA8202A02E47CCB8CB691436284205]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population Population]</local-name>
            <parent-name>[WorldBank_Populations.csv]</parent-name>
            <remote-alias>Population Population</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WorldBank_Populations.csv_2EAA8202A02E47CCB8CB691436284205]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ZN(SUM([Population Population])) - LOOKUP(ZN(SUM([Population Population])), -1)'>
          <table-calc ordering-type='Field'>
            <order field='[federated.091u26n1vu7qvt191b1jc02r8eyg].[Country Code Country Code]' />
            <order field='[federated.091u26n1vu7qvt191b1jc02r8eyg].[Country Name Country Name]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='FilteredCause' datatype='boolean' name='[Calculation_1074390029560340480]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Causes name] = [Parameters].[Parameter 1]' />
      </column>
      <column caption='Deaths Per Capita' datatype='real' name='[Calculation_382243062475091969]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Death Numbers])/SUM([Population Population]))*100' />
      </column>
      <column caption='RankTopDeathsByCause' datatype='integer' name='[Calculation_590816017834442755]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([Death Numbers]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
      <column caption='Country Code' datatype='string' name='[Country Code Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[Country Name Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[Population Population]' role='measure' type='quantitative' />
      <column caption='Series Name' datatype='string' name='[Series Name Series Name]' role='dimension' type='nominal' />
      <column caption='Population Year' datatype='integer' name='[Year Year]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='CausesOfDeathCleanOutputV2.0.csv' datatype='table' name='[__tableau_internal_object_id__].[20222703 Causes Of Death Clean Output V2.0.csv_2DC64585AFFD47B1AF6375B5A3ABA073]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='WorldBank_Populations.csv' datatype='table' name='[__tableau_internal_object_id__].[WorldBank_Populations.csv_2EAA8202A02E47CCB8CB691436284205]' role='measure' type='quantitative' />
      <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country Code,Country Name)' hidden='true' name='[Action (Country Code,Country Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Code Country Code]' />
          <groupfilter function='level-members' level='[Country Name Country Name]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Causes name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Protein-energy malnutrition&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Acute hepatitis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maternal disorders&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chronic kidney disease&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Number of executions (Amnesty International)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Drug use disorders&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tuberculosis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Diarrheal diseases&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Road injuries&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chronic respiratory diseases&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nutritional deficiencies&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lower respiratory infections&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Neoplasms&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alcohol use disorders&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Meningitis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HIV/AIDS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cirrhosis and other chronic liver diseases&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Parkinson&apos;s disease&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Environmental heat and cold exposure&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Exposure to forces of nature&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Interpersonal violence&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Digestive diseases&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Self-harm&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Conflict and terrorism&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poisonings&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alzheimer&apos;s disease and other dementias&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Neonatal disorders&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Diabetes mellitus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fire, heat, and hot substances&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Drowning&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Terrorism (deaths)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cardiovascular diseases&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#bab0ac'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='CauseSelector' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Drowning&quot;'>
          <calculation class='tableau' formula='&quot;Drowning&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='CausesOfDeathCleanOutputV2.0.csv' id='20222703 Causes Of Death Clean Output V2.0.csv_2DC64585AFFD47B1AF6375B5A3ABA073'>
            <properties context=''>
              <relation connection='textscan.01utfwt1kwzgvv113vo0u128xplp' name='20222703 Causes Of Death Clean Output V2.0.csv' table='[20222703 Causes Of Death Clean Output V2.0#csv]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:F10001:no:A1:F10001:1' header='yes' locale='en_CA' separator=','>
                  <column datatype='string' name='Causes name' ordinal='0' />
                  <column datatype='string' name='Causes Full Description' ordinal='1' />
                  <column datatype='integer' name='Death Numbers' ordinal='2' />
                  <column datatype='string' name='Entity' ordinal='3' />
                  <column datatype='string' name='Code' ordinal='4' />
                  <column datatype='integer' name='Year' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='WorldBank_Populations.csv' id='WorldBank_Populations.csv_2EAA8202A02E47CCB8CB691436284205'>
            <properties context=''>
              <relation connection='textscan.153m1t90bcypu019hvbq910sz9c4' name='WorldBank_Populations.csv' table='[WorldBank_Populations#csv$]' type='table'>
                <columns gridOrigin='A1:E6122:no:A1:E6122:2'>
                  <column datatype='string' name='Country Name Country Name' ordinal='0' />
                  <column datatype='string' name='Country Code Country Code' ordinal='1' />
                  <column datatype='string' name='Series Name Series Name' ordinal='2' />
                  <column datatype='integer' name='Year Year' ordinal='3' />
                  <column datatype='integer' name='Population Population' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Code]' />
              <expression op='[Country Code Country Code]' />
            </expression>
            <first-end-point object-id='20222703 Causes Of Death Clean Output V2.0.csv_2DC64585AFFD47B1AF6375B5A3ABA073' />
            <second-end-point object-id='WorldBank_Populations.csv_2EAA8202A02E47CCB8CB691436284205' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_A50DABF2CE5A4EBEB37D58A5D1523B13]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Causes of Death - Dash' type='sheet' worksheet='Map - Deaths Per Capita' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Causes of Death - Dash' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Box Plot - country outliers'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean Output V2.0' name='federated.091u26n1vu7qvt191b1jc02r8eyg' />
          </datasources>
          <datasource-dependencies datasource='federated.091u26n1vu7qvt191b1jc02r8eyg'>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Entity:nk]' />
            </encodings>
            <reference-line axis-column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[sum:Death Numbers:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[sum:Death Numbers:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.091u26n1vu7qvt191b1jc02r8eyg].[sum:Death Numbers:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{7AB27C74-572E-45D1-8F30-CF052FD54398}' />
    </worksheet>
    <worksheet name='Box Plot - deaths outliers'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean Output V2.0' name='federated.091u26n1vu7qvt191b1jc02r8eyg' />
          </datasources>
          <datasource-dependencies datasource='federated.091u26n1vu7qvt191b1jc02r8eyg'>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[sum:Death Numbers:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[sum:Death Numbers:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.091u26n1vu7qvt191b1jc02r8eyg].[sum:Death Numbers:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{FBCD4967-E1DB-4C56-864B-63BAE09982F4}' />
    </worksheet>
    <worksheet name='Deaths by Causes'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean Output V2.0' name='federated.091u26n1vu7qvt191b1jc02r8eyg' />
          </datasources>
          <datasource-dependencies datasource='federated.091u26n1vu7qvt191b1jc02r8eyg'>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.091u26n1vu7qvt191b1jc02r8eyg].[sum:Death Numbers:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]</rows>
        <cols>[federated.091u26n1vu7qvt191b1jc02r8eyg].[sum:Death Numbers:qk]</cols>
      </table>
      <simple-id uuid='{5FAD642F-9BA2-471C-A629-0D0DAE02433A}' />
    </worksheet>
    <worksheet name='Diseases Over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean Output V2.0' name='federated.091u26n1vu7qvt191b1jc02r8eyg' />
          </datasources>
          <datasource-dependencies datasource='federated.091u26n1vu7qvt191b1jc02r8eyg'>
            <column caption='Deaths Per Capita' datatype='real' name='[Calculation_382243062475091969]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Death Numbers])/SUM([Population Population]))*100' />
            </column>
            <column datatype='string' name='[Causes Full Description]' role='dimension' type='nominal' />
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Population' datatype='integer' name='[Population Population]' role='measure' type='quantitative' />
            <column caption='Population Year' datatype='integer' name='[Year Year]' role='dimension' type='quantitative' />
            <column-instance column='[Causes Full Description]' derivation='Attribute' name='[attr:Causes Full Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year Year]' derivation='None' name='[none:Year Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_382243062475091969]' derivation='User' name='[usr:Calculation_382243062475091969:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]'>
            <groupfilter function='member' level='[none:Causes name:nk]' member='&quot;Acute hepatitis&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Year Year:qk]' included-values='non-null' />
          <slices>
            <column>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]</column>
            <column>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Year Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.091u26n1vu7qvt191b1jc02r8eyg].[usr:Calculation_382243062475091969:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[attr:Causes Full Description:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.091u26n1vu7qvt191b1jc02r8eyg].[usr:Calculation_382243062475091969:qk]</rows>
        <cols>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Year Year:qk]</cols>
      </table>
      <simple-id uuid='{9867EBAE-2EA9-4F1B-8B0F-28069EA3EFC2}' />
    </worksheet>
    <worksheet name='Forecasting'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean Output V2.0' name='federated.091u26n1vu7qvt191b1jc02r8eyg' />
          </datasources>
          <datasource-dependencies datasource='federated.091u26n1vu7qvt191b1jc02r8eyg'>
            <column caption='Deaths Per Capita' datatype='real' name='[Calculation_382243062475091969]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Death Numbers])/SUM([Population Population]))*100' />
            </column>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column caption='Country Code' datatype='string' name='[Country Code Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[Country Name Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Population' datatype='integer' name='[Population Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='Attribute' name='[attr:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_382243062475091969]' derivation='User' forecast-column-base='[usr:Calculation_382243062475091969:qk]' forecast-column-type='forecast-value' name='[fVal:usr:Calculation_382243062475091969:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_382243062475091969]' derivation='User' name='[usr:Calculation_382243062475091969:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[Action (Country Code,Country Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_A50DABF2CE5A4EBEB37D58A5D1523B13]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Country Code Country Code]' member='&quot;CAN&quot;' />
              <groupfilter function='member' level='[Country Name Country Name]' member='&quot;Canada&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]'>
            <groupfilter function='level-members' level='[none:Causes name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Entity:nk]'>
            <groupfilter function='level-members' level='[none:Entity:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]</column>
            <column>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Entity:nk]</column>
            <column>[federated.091u26n1vu7qvt191b1jc02r8eyg].[Action (Country Code,Country Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' field='[federated.091u26n1vu7qvt191b1jc02r8eyg].[fVal:usr:Calculation_382243062475091969:qk]' value='#e15759' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.091u26n1vu7qvt191b1jc02r8eyg].[fVal:usr:Calculation_382243062475091969:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.091u26n1vu7qvt191b1jc02r8eyg].[fVal:usr:Calculation_382243062475091969:qk]' value='p0.000%' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Entity:nk]' value='Country' />
            <format attr='background-color' value='#e6e6e6' />
            <format attr='border-style' value='dotted' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-weight' value='bold' />
            <format attr='text-align' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Forecast Indicator:nk]' />
              <tooltip column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[attr:Entity:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.091u26n1vu7qvt191b1jc02r8eyg].[fVal:usr:Calculation_382243062475091969:qk]</rows>
        <cols>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Year:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='0' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{180E61C0-4019-44C0-A5D4-3D57B6960362}' />
    </worksheet>
    <worksheet name='Map - Deaths Per Capita'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean Output V2.0' name='federated.091u26n1vu7qvt191b1jc02r8eyg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.091u26n1vu7qvt191b1jc02r8eyg'>
            <column caption='Deaths Per Capita' datatype='real' name='[Calculation_382243062475091969]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Death Numbers])/SUM([Population Population]))*100' />
            </column>
            <column caption='Country Code' datatype='string' name='[Country Code Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[Country Name Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Population' datatype='integer' name='[Population Population]' role='measure' type='quantitative' />
            <column-instance column='[Country Code Country Code]' derivation='None' name='[none:Country Code Country Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name Country Name]' derivation='None' name='[none:Country Name Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_382243062475091969]' derivation='User' name='[usr:Calculation_382243062475091969:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.091u26n1vu7qvt191b1jc02r8eyg].[Latitude (generated)]</column>
            <column>[federated.091u26n1vu7qvt191b1jc02r8eyg].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.091u26n1vu7qvt191b1jc02r8eyg].[Longitude (generated)]' field-type='quantitative' max='-1122496.9480685275' min='-20909120.36805626' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.091u26n1vu7qvt191b1jc02r8eyg].[Latitude (generated)]' field-type='quantitative' max='10503138.488680281' min='-947959.67630576808' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.091u26n1vu7qvt191b1jc02r8eyg].[usr:Calculation_382243062475091969:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.091u26n1vu7qvt191b1jc02r8eyg].[usr:Calculation_382243062475091969:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.091u26n1vu7qvt191b1jc02r8eyg].[usr:Calculation_382243062475091969:qk]' palette='red_black_white_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Country Name Country Name:nk]' value='false' />
            <format attr='break-on-special' field='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Country Name Country Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Country Name Country Name:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Country Code Country Code:nk]' />
              <lod column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Country Name Country Name:nk]' />
              <size column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[usr:Calculation_382243062475091969:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#bab0ac' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#e15759' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.091u26n1vu7qvt191b1jc02r8eyg].[Latitude (generated)]</rows>
        <cols>[federated.091u26n1vu7qvt191b1jc02r8eyg].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{28507CD0-515C-416E-B1ED-2DD919F2CD9D}' />
    </worksheet>
    <worksheet name='Map - Temperature'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean Output V2.0' name='federated.091u26n1vu7qvt191b1jc02r8eyg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.091u26n1vu7qvt191b1jc02r8eyg'>
            <column datatype='string' name='[Code]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Code]' derivation='None' name='[none:Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.091u26n1vu7qvt191b1jc02r8eyg].[Longitude (generated)]' field-type='quantitative' max='27168824.166140702' min='-12906192.51943779' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.091u26n1vu7qvt191b1jc02r8eyg].[Latitude (generated)]' field-type='quantitative' max='13431745.047823057' min='-9233393.6318401508' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.091u26n1vu7qvt191b1jc02r8eyg].[sum:Death Numbers:qk]' palette='tableau-map-temperatur' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Code:nk]' />
              <lod column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Entity:nk]' />
              <color column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[sum:Death Numbers:qk]' />
              <geometry column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.813093900680542' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.091u26n1vu7qvt191b1jc02r8eyg].[Latitude (generated)]</rows>
        <cols>[federated.091u26n1vu7qvt191b1jc02r8eyg].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{69C7B501-62DC-41CD-988D-438B25289385}' />
    </worksheet>
    <worksheet name='Most deaths - Bubble'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean Output V2.0' name='federated.091u26n1vu7qvt191b1jc02r8eyg' />
          </datasources>
          <datasource-dependencies datasource='federated.091u26n1vu7qvt191b1jc02r8eyg'>
            <column datatype='string' name='[Causes Full Description]' role='dimension' type='nominal' />
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column-instance column='[Causes Full Description]' derivation='None' name='[none:Causes Full Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[sum:Death Numbers:qk]' />
              <lod column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes Full Description:nk]' />
              <text column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{71361C88-3227-4BD0-808D-DE72EDC0B9CE}' />
    </worksheet>
    <worksheet name='Time series'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean Output V2.0' name='federated.091u26n1vu7qvt191b1jc02r8eyg' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='CauseSelector' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Drowning&quot;'>
              <calculation class='tableau' formula='&quot;Drowning&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.091u26n1vu7qvt191b1jc02r8eyg'>
            <column caption='FilteredCause' datatype='boolean' name='[Calculation_1074390029560340480]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Causes name] = [Parameters].[Parameter 1]' />
            </column>
            <column datatype='string' name='[Causes Full Description]' role='dimension' type='nominal' />
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Causes Full Description]' derivation='Attribute' name='[attr:Causes Full Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1074390029560340480]' derivation='None' name='[none:Calculation_1074390029560340480:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Calculation_1074390029560340480:nk]'>
            <groupfilter function='member' level='[none:Calculation_1074390029560340480:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Calculation_1074390029560340480:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.091u26n1vu7qvt191b1jc02r8eyg].[attr:Causes Full Description:nk]' value='#d4d4d4' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 1]' value='Select Cause' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[attr:Causes Full Description:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year: </run>
                <run bold='true'><![CDATA[<[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Year:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Description: </run>
                <run bold='true'><![CDATA[<[federated.091u26n1vu7qvt191b1jc02r8eyg].[attr:Causes Full Description:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Death Numbers: </run>
                <run bold='true'><![CDATA[<[federated.091u26n1vu7qvt191b1jc02r8eyg].[sum:Death Numbers:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#555555' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.091u26n1vu7qvt191b1jc02r8eyg].[sum:Death Numbers:qk]</rows>
        <cols>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{89712CAA-89F6-4A40-993E-98B16EC123AB}' />
    </worksheet>
    <worksheet name='Top Causes'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Medium'>Top 10 Causes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean Output V2.0' name='federated.091u26n1vu7qvt191b1jc02r8eyg' />
          </datasources>
          <datasource-dependencies datasource='federated.091u26n1vu7qvt191b1jc02r8eyg'>
            <column caption='RankTopDeathsByCause' datatype='integer' name='[Calculation_590816017834442755]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([Death Numbers]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column caption='Country Code' datatype='string' name='[Country Code Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[Country Name Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_590816017834442755]' derivation='User' name='[usr:Calculation_590816017834442755:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[Action (Country Code,Country Name)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_A50DABF2CE5A4EBEB37D58A5D1523B13]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Country Code Country Code]' member='&quot;CAN&quot;' />
              <groupfilter function='member' level='[Country Name Country Name]' member='&quot;Canada&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[usr:Calculation_590816017834442755:qk:3]' included-values='in-range'>
            <max>10</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.091u26n1vu7qvt191b1jc02r8eyg].[sum:Death Numbers:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.091u26n1vu7qvt191b1jc02r8eyg].[usr:Calculation_590816017834442755:qk:3]</column>
            <column>[federated.091u26n1vu7qvt191b1jc02r8eyg].[Action (Country Code,Country Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.091u26n1vu7qvt191b1jc02r8eyg].[usr:Calculation_590816017834442755:qk:3]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>Rank &lt;</run>
                <run>[federated.091u26n1vu7qvt191b1jc02r8eyg].[usr:Calculation_590816017834442755:qk:3]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.091u26n1vu7qvt191b1jc02r8eyg].[sum:Death Numbers:qk]</rows>
        <cols>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]</cols>
      </table>
      <simple-id uuid='{87CF30E5-A09A-45D3-BCA4-AA40AAF46E7D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Causes of Death - Dash'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='CauseSelector' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Drowning&quot;'>
          <calculation class='tableau' formula='&quot;Drowning&quot;' />
          <members>
            <member value='&quot;Acute hepatitis&quot;' />
            <member value='&quot;Alcohol use disorders&quot;' />
            <member value='&quot;Alzheimer&apos;s disease and other dementias&quot;' />
            <member value='&quot;Cardiovascular diseases&quot;' />
            <member value='&quot;Chronic kidney disease&quot;' />
            <member value='&quot;Chronic respiratory diseases&quot;' />
            <member value='&quot;Cirrhosis and other chronic liver diseases&quot;' />
            <member value='&quot;Conflict and terrorism&quot;' />
            <member value='&quot;Diabetes mellitus&quot;' />
            <member value='&quot;Diarrheal diseases&quot;' />
            <member value='&quot;Digestive diseases&quot;' />
            <member value='&quot;Drowning&quot;' />
            <member value='&quot;Drug use disorders&quot;' />
            <member value='&quot;Environmental heat and cold exposure&quot;' />
            <member value='&quot;Exposure to forces of nature&quot;' />
            <member value='&quot;Fire, heat, and hot substances&quot;' />
            <member value='&quot;HIV/AIDS&quot;' />
            <member value='&quot;Interpersonal violence&quot;' />
            <member value='&quot;Lower respiratory infections&quot;' />
            <member value='&quot;Malaria&quot;' />
            <member value='&quot;Maternal disorders&quot;' />
            <member value='&quot;Meningitis&quot;' />
            <member value='&quot;Neonatal disorders&quot;' />
            <member value='&quot;Neoplasms&quot;' />
            <member value='&quot;Number of executions (Amnesty International)&quot;' />
            <member value='&quot;Nutritional deficiencies&quot;' />
            <member value='&quot;Parkinson&apos;s disease&quot;' />
            <member value='&quot;Poisonings&quot;' />
            <member value='&quot;Protein-energy malnutrition&quot;' />
            <member value='&quot;Road injuries&quot;' />
            <member value='&quot;Self-harm&quot;' />
            <member value='&quot;Terrorism (deaths)&quot;' />
            <member value='&quot;Tuberculosis&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98214' id='14' param='vert' type-v2='layout-flow' w='99064' x='468' y='893'>
            <zone h='4576' id='15' type-v2='title' w='99064' x='468' y='893'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93638' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='5469'>
              <zone fixed-size='733' h='93638' id='3' is-fixed='true' param='vert' type-v2='layout-flow' w='42891' x='468' y='5469'>
                <zone fixed-size='463' h='52567' id='5' is-fixed='true' name='Map - Deaths Per Capita' w='42891' x='468' y='5469'>
                  <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='41071' id='35' name='Forecasting' w='42891' x='468' y='58036'>
                  <layout-cache minheight='198' minwidth='181' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='93638' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='43359' y='5469'>
                <zone custom-title='true' h='73549' id='12' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='9362' x='43359' y='5469'>
                  <formatted-text>
                    <run>Select Cause</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='7366' id='38' name='Forecasting' pane-specification-id='0' param='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Forecast Indicator:nk]' type-v2='color' w='9362' x='43359' y='79018'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='93638' id='20' name='Top Causes' w='46810' x='52721' y='5469'>
                <layout-cache minheight='202' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size sizing-mode='automatic' />
          <zones>
            <zone h='100000' id='34' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97054' id='33' param='vert' type-v2='layout-flow' w='95734' x='2133' y='1473'>
                <zone h='5894' id='15' type-v2='title' w='95734' x='2133' y='1473'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='28422' id='5' is-fixed='true' name='Map - Deaths Per Capita' w='95734' x='2133' y='7367'>
                  <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='5894' id='12' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='95734' x='2133' y='35789'>
                  <formatted-text>
                    <run>Select Cause</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='28422' id='20' is-fixed='true' name='Top Causes' w='95734' x='2133' y='41683'>
                  <layout-cache cell-count-w='10' minheight='202' non-cell-size-w='70' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{61FF3A50-B7A2-419D-B625-A044C6A20269}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Deaths by Causes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13F9ED6E-A99C-48A9-8558-BA1928D4E0A6}' />
    </window>
    <window class='worksheet' name='Most deaths - Bubble'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes Full Description:nk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{854B4460-DC02-4584-8B04-43DA5EA492ED}' />
    </window>
    <window class='worksheet' name='Map - Temperature'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.091u26n1vu7qvt191b1jc02r8eyg].[sum:Death Numbers:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Code:nk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Entity:nk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[sum:Death Numbers:qk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[usr:Calculation_590816017834442755:qk:2]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{AC72D0C5-4C72-4567-A2CD-40FE65CE905C}' />
    </window>
    <window class='worksheet' name='Top Causes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CF7AC26D-4A50-440D-9196-B720645FEC5A}' />
    </window>
    <window class='worksheet' name='Time series'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Calculation_1074390029560340480:nk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes Full Description:nk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Entity:nk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{84C7E4DE-7539-4611-8DEB-A51BB50D6CD0}' />
    </window>
    <window class='worksheet' name='Box Plot - deaths outliers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{51218BA2-9150-49B6-9B6E-4633AD2EF53A}' />
    </window>
    <window class='worksheet' name='Box Plot - country outliers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Entity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D42F5F6-26EE-4C5D-9DF4-B99BCB1ECFCF}' />
    </window>
    <window class='worksheet' name='Map - Deaths Per Capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.091u26n1vu7qvt191b1jc02r8eyg].[usr:Calculation_382243062475091969:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Country Code Country Code:nk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Country Code:nk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Country Name Country Name:nk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Entity:nk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Year (Sheet1):qk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Year Year:qk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[sum:Calculation_382243062475091969:qk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[usr:Calculation1:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F09F8B54-AF08-453D-823D-F952F88F9FE7}' />
    </window>
    <window class='worksheet' maximized='true' name='Diseases Over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes Full Description:nk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Year Year:qk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B0814069-7C0F-4BFF-BC3B-8BA8D41F9C07}' />
    </window>
    <window class='worksheet' name='Forecasting'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Entity:nk]' type='filter' />
            <card mode='dropdown' param='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Causes name:nk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Country Name Country Name:nk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Entity:nk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Forecast Indicator:nk]</field>
            <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00E2EFF0-B639-4276-96DA-30B1C623ABE2}' />
    </window>
    <window class='dashboard' name='Causes of Death - Dash'>
      <viewpoints>
        <viewpoint name='Forecasting'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map - Deaths Per Capita'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Country Code Country Code:nk]</field>
                    <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[none:Country Name Country Name:nk]</field>
                    <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[Latitude (generated)]</field>
                    <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[Longitude (generated)]</field>
                    <field>[federated.091u26n1vu7qvt191b1jc02r8eyg].[usr:Calculation_382243062475091969:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;CAN&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>59.2067</value>
                  <value>-111.1937</value>
                  <value>0.003372029580231274</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Top Causes'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{D9F906AD-980F-4987-9BBF-2F86230F1BD7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Box Plot - country outliers' width='134'>
      iVBORw0KGgoAAAANSUhEUgAAAIYAAADACAYAAADBeBvgAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAALB0lEQVR4nO3da3CU5RmH8SuuSAITMDGmCYhNKCcXrVnCwdAgFClKnQqjtjgglMLoQhBB
      az3UYgetLW21joMFgwYDtCitdkihIFSiNWgKmFM5BhAjOLCNgZQw5Oi6/bAh2YSbfMiJF/j/
      Pj6bfXffyTV5d7PJc4cFAoEAIs1ccaGfgDiTwhCTwhCTwhCTwhCTwhCTwhDTlRf6CVwMKisr
      zXW/39/Jz6TzhOkXXK1TWVlJt27dLvTT6DC6lIhJYYhJYYjJ2S8+/RUc2LKa1Zv3UFoFEbHJ
      TJ4/g5QYF1DH0a3LWb6+/rY+KUybPYXkGFfwrmW5ZL60hh1lfiL6jObBRybj7h48bGGGl2W7
      RzH/hftxu0Ier3o7Sx9dQVHyHNJnJXX66TqJo8P4cmsmG2tHk7Z4NvHhX1O+bx1LMnNwPzaG
      nvv/yqv7buShhtvWs2zJBq5dNJHr8bFl+ftE/fh5lg6I4MS213hx5XYWpY0gHIDhTBrvI7/Y
      jzukjOqiPGpTR9O76kKdsXM4+lISfdtcFky8mfhwF9CFqBu+w5AeVVQBXx4poW/q6JDbfsD3
      4ss4CfDZx+y8fhITB/TARRdiU+9j/OmdFFQ3HjveMxhffjGNbzirKcqrJWlIVOeepEM5OgyX
      K/TnvJ+y3PUcTvAQB1w7dCSnN2+gpNoP1FG+bz253YczCOBUOdHf6kvjvaO5YfCVnDgZcrg4
      D4N9+RSfLaO6iLzaJDxXd/RZXRwcHUaDulK2ZfyOLO5h7vi44Fr0GOZOvYq3n0jD632Ixe9d
      w9333UQ4UFNTQ0REeJNDXOEq5b+loStxjPCUk19fRnVRHoy4hZ6dckLO5/gw/BV5rF6ymYiJ
      jzMrJabhp4D/2CaW/aMbU3+7lPT0V3hyXCV/W7YFH9C1a1eqqqqbHOdrfyzfiG167GiPm/L8
      Yvz42b8bPJ6mMV3OnB2Gfz9vZx5nzLxpDe82ztq7pYD+E1NDXmNM4Nbu/6bAB/SM4uSnh0Ne
      P5xk356vuCa62fGjPbjL8ymu20VejQd10cjRYZzKyaZu3AT6dDn3tt4J3diRXciJaj/gp/r4
      Nj4+EEP01UDiSIYdWUfWgQr81FG67S22RA4zvvHReNzl7Fy7gxqPB3XRyNFvV4+U7CbnzTRy
      mqwOZ076LJLGPMAP16Xzh58to6zWRUTsYG5/YAYjwgHiGP/gd8l86WnSyvxE9L+dh+aMML/x
      0R43vneKGXOvsgilD9FaSR+iyWVJYYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJ
      YYhJYYhJYYhJYYhJYYhJYYhJYYjJ0X8MLEGBQIDs/BIKD/lI6hfH2CEJhIWFdehj6o+BW6mz
      /hg4EAjw3Koc8oqPNawlD+zFwumjOjQOXUocLju/pEkUAHnFx8guKOnQx1UYDld4yGevH7TX
      24vCEJPCcLikfnH2en97vb0oDIcbOySB5IG9mqwNHdiLsZ6EDn1cvStppc78F8VAIEB2QQmF
      B30k9Y9jrEdvVx1L/7sqlyWFISaFISaFISaFISZnf7ra4pbRwJlDbMp8g43/KaP2qkgS7niY
      p+68PnhXbRndJo4Oo8UtoznJB8te47NbFvD72fGEf32GL8pr6++pLaPbytGXkpa2jOZIDu93
      u5uZqfEEb+7OdbH12z1ry+g2c3QYLW0ZferwQXqPGGpvwagto9vM0ZeSBnWlbFuVQbH7AeaO
      jwGgqqoLVV+8wW/eLKLkdC2uiD6kTJvNlOQYvmppy+iGjx2CW0ZvrL+cBLeMnklP3j/n4c83
      E+306dPteJLO4vgw/BV5rHl9L+7pjzOr2e7AXRPvYOa9PyEy3EVd+T7WLcngg8QnuK1hy+jG
      OM67ZfTGYvzugcEto6eGw//OfQ7Wr74rKyuJjIxsj1N0JEdfSlraMjou8VrqqrsRGR5c7xJ1
      A6OG1VByBG0Z3Q4cHUZLW0bTP4Xen6xia0k1fqCufB85BTHcOAhtGd0OHH0paXHLaFciE2eN
      Ys2rTzLvaBWuyARSZz6sLaPbiT52byV97C6XJYUhJoUhJoUhJoUhJoUhJoUhJoUhJoUhJoUh
      JoUhJoUhJoUhJoUhJoUhJoUhJoUhJoUhJoUhJoUhJoUhJoUhJoUhJoUhJoUhJoUhJoUhJoUh
      JoUhJoUhJoUhJoUhJoUhJoUhJoUhJoUhJoUhJoUhJoUhJoUhJoUhJoUhJmeH4a/gwKY/snBB
      Gl5vGgsWZpBb5j/ny3xbfk2a91k2+ULuWpZLxtPzgvf71Vr2nmm8rTDDi/eRP7G3+aGqt7M0
      zYs3o7Bjzuci4ugwgjPRUklbvIT09Jf55ZQe/DMzh1OhX3Qml7c/+TbfTw5dDJmJlv4yPx9z
      gpUrt9M4+apxJlqohploHXlSFwlHh9HiTDQAzpD3549ImDGB60LHmWgmWps5OoyWZqIB+Pdn
      8V7MPUzo1XTIjWaitZ2j55U0MGai4f+MrHfD+dG8RJplQY1morWZ48M430w035Ysqu+YR2Lz
      KoCul9hMtEAgQHZ+CYWHfCT1i2PskATCwsI69DGdHUbITLSm46928e76feT60/hX6PIOLzsn
      LeKZQVGc3H0Yf4q7/qdJ/Uy0cc2OH+3BXb6R4rpa8mo8THXgkKNAIMBzq3LIKz4GwIdFn/PR
      7qMsnD6qQ+NwdBjBmWheYybaTcxYms6MkJXCjGc5fuczTIgDGMmwN1eQdeA6Jg6I4ET9TLRF
      55mJtn7tDmo80x05Ey07v6QhirPyio+RXVDCbUMSO+xxHR1GizPRWrznpTMTrfCQz14/6OvQ
      MDQTrZU6aybai2tz+bDo83PWb735m/x0ckqHPa6j364KJPWLs9f72+vtRWE43NghCSQP7NVk
      bejAXoz1JHTo4+pS0kqdOV4zEAiQXVBC4UEfSf3jGOvp+LerCqOVNHdVLksKQ0wKQ0wKQ0wK
      Q0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wK
      Q0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0wKQ0yO3kscfwUH
      tqxm9eY9lFZBRGwyk+fPICXGBdRRuvMtMtbuoOR0LVdFDmTcbC8T+3UP3rUsl8yX1rCjzE9E
      n9E8+Mhk3MGbKMzwsmz3KOa/cD/u0LEW1dtZ+ugKipLnkD6r5d3KL3WODiM4E200aYtnEx/+
      NeX71rEkMwf3Y2Pouestlu1JZNrT99E36gqqj2/j9Vey2P/8FAaFzkQbEMGJba/x4srtLEo7
      u9F840w0d0gZDTPRqs73jC4fjr6UtDgTzT2FX8xIpW9UF8BFeHwqKd+sCg7E00y0NnN0GC3O
      RHO5moy8OnMoi48ihjMINBOtHTj6UtLAmol2lr+CAxteZwN34Z3Wj3A0E609OD6M881EA6Du
      KJuW/x1u9/Jo/YtOuPRmol0Ijr6UhM5ES24eBSf5YMVWYqfNZkJIFAD0jOLkp4dDXj/Uz0SL
      bnaIaA/u8nyK63aRV+PB48whRxeEo8MIzkSbYMxEA/a/y65+d5HcwxijmDiSYUfWkXWgAj91
      lNbPRDv3Gx+cibZz7Q5qPB5HzkS7UBx9KWlpJlrvIyXsfucpvH8Jva03kxY9w4S4S2cm2oWi
      eSWtpHklcllSGGJSGGJSGGJSGGJSGGJSGGJSGGJSGGJSGGJSGGJSGGJSGGJSGGJSGGJSGGJS
      GGJSGGJSGGJSGGJSGGJSGGL6PwzwyY+YUXXgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Box Plot - deaths outliers' width='134'>
      iVBORw0KGgoAAAANSUhEUgAAAIYAAADACAYAAADBeBvgAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAALX0lEQVR4nO3cf2zU933H8ac5iH12Dfj8IwYS1pDZjLNo/E0CLsSZiYSO/piG1UaKF7PA
      EpWbPaKELo0qqBIRNfljS8XSpjAnJSXJ1DhtmUC0RmOVaIiHhal/3CCQgxYW1CSHf5LcfD9M
      vnh/YLgzfmd0GY7P6evxl/X5fH98vrqn7vv93h/OGhkZGUHkKtMmewGSmRSGmBSGmBSGmBSG
      mBSGmBSGmBTGJxSLxSZ7CRNKYYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJ
      YYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJYYhJ
      YYhJYYhJYYhp+mQvQP4AIyMMvXGQ+NGjeBcvJq/mzyEra0JPmZXZ/zI6wr6nnmT3u2lDSxto
      eqgSgKHf7mH78//GqbiHoi98nb/72xXM9VzazO1rY+fWn9De5+K9uYb1G+/Dn3dprntHkO3H
      7uaRZ9fg96QdO3GYbd98idAdqXN8nFgsRm5u7vW71I8zMkLvP/wj8a7uK0Nep5Lix781oXFk
      +DdGL+eyv853mwIUXz2V6Kb5lXf54qbneKwwzsk9z9P0iwVsWT0fiLD/hQMUrH2abeVe+ltf
      5HsvH2ZLYxU5ACylNhChM+ziTysjEepguLqGefFP7QKvaeiNg2OiAIh3dTN08CB5NTUTdt7M
      fsb4oJ++opLxUQCJrlb6auqoLpkBnpmUr66lLPQbzgCcOcSR+bWsLp+JhxmUVNcRiB6hK5Ha
      f45TQaQzjJs6IqGOYSpvL5joq/o/iR89ao//pz1+vWR2GAMD5MwtNafOn4eyBb7UgGchi0r7
      GHCBDwbx3bqA1HeBj0UV0+kfSDtAqUNFpJPw5TISITqGK3FmX/ermJIy+1by3x9yfPeTBHcD
      Hi8lf7qCvwrW4s+D4eQ0vN70jT14PBHe74VkMonXmzPmUNM8PZzrAeZeHimlyhmkZfR2kgh1
      QNWDzOLAuGV83L9ujEaj1+Eir6GsDP7j0LjhrPKyCT1/ZoexeB3bmtZd+vvCEL/vbuaFF9/k
      7x+9mxuyLxIf8yzg4rqllBRDdiSbeDwBpOK46JZwY8nYw/scP4MtYVz/Qt4+Bk59Dpwfvwzr
      ITMWi5Gfn///vcJryl8VoDcUuurh06EwEJjQh8/MvpWkm5HHTUu+yrLY7zgLzJ4Np06n3Rvc
      MCciRfg8wKwCBn53Ou35YYATb31Eoe+qY/oc/IOdhC8cpSPp4OSQebKyKH78WxQ2BMm9azmF
      DUGKH39swl9XMzqMoz//PvtO9JNwATfB+63/yq9nL6IMyHGqKXqjmdaeC+B+yMk9uzl1253c
      AnDLcpac3c2ekx/icoGe1mb25y8xPngfjn+QI6+3k3QcMrELALKyyKupoejhDZfeRCY4Csjw
      W4k/8CV+/+o/8e0f9BB3b6DoC1/hG+tGXzlzKql74B22P/MIr8Y9FC29n43r5o/uWUpg/T3s
      3LqZxj4Xb9kqNjRUmR+8z/ET2RVmxb0Zm8WkyPAfuDLXp/YD1yTJ6FuJTB6FISaFISaFISaF
      ISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaF
      ISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaF
      ISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaFISaF
      Iabpk72AP0yCozu/w/Nti2hoeojK0dHuHUG2t6dtNq+WLU98mVLA7Wtj59af0N7n4r25hvUb
      78Ofl7bfsbt55Nk1+D3ppznMtm++ROiOBpoequSP2ZQIwz3Twt7hFaycdy5ttJeevmVsaFrH
      4nF7RNj/wgEK1j7NtnIv/a0v8r2XD7OlsYocAJZSG4jQGXbxp5WRCHUwXF3DvPhEX1Hmy/xb
      ifse+3b1sar+Tj43ZqKfPs+NFFv7nDnEkfm1rC6fiYcZlFTXEYgeoSuR2mSOU0GkM4x7ZSRB
      qGOYytsLJuY6ppiMD2PgzZ9y9q567si7aiIxyEDBHEqtnT4YxHfrAlLfBT4WVUynfyBtm1KH
      ikgn4ctlJEJ0DFfizL6+65+qMvtWMtRG8/Eq1jbmAdGxc9EoH7bvJNgOcAP5n7+Nr639G5bP
      9ZBMJvF6c8ZsPs3Tw7keYO7lkVKqnEFaRm8niVAHVD3ILA6MW0YsFjOXF41GzfHPggwOI0H3
      z7rw1zVy9ZcFAMUBNjUFLv3tJug/+St+/M8/p/ip+yjLziYeTwCpOC66JdxYMvYQPsfPYEsY
      17+Qt4+BU58D58efKjc3d9xYLBYjPz//E19dpsvcMHoP0tIW4p22IK+ljwfbWdrQxJiXBk8O
      hYv+gpV/8gxneqFsVgEDx07jLvOP3k4GOPHWRxSuvOocPgf/YAvhC8N0JB3qc5BRmRtG+jcC
      ABH2PfVL5jxx6XU18qsf8e+zvsTXKm8ib8YFBk/speVsBWuKgeLlLHntJfacvInV5V76W5vZ
      n7+ELeM+eB+Of5C9r7eTdB5AXaRkbhjXUFrzl/xZ8w6efOW/iA578N68jL9++H7mX5olsP4e
      dm7dTGOfi7dsFRsaqswP3uf4iewKs+JeZZEua2RkZGSyFzEVxWIx89njsyLjX1dlcigMMSkM
      MSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkM
      MSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkM
      MSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkMMSkM
      MSkMMSkMMU2RMBIc3fkYweAOutNGh367h2cfbSQYfJjNP/w177mpObevjR2bHyYYbOTR777O
      8aHUXPeOIMGN/8LxtO0vneYw2xqDBHd088duSoThnmlh7/AKVs5LG0x00/zKu3xx03M0bXua
      tXMO0fSLs6OTEfa/cICCtU+zrek5Nq3o5+WXD5O4svNSagMROsNjy0iEOhiurmEekvlhuO+x
      b1cfq+rv5HNpw4muVvpq6qgumQGemZSvrqUs9BvOAJw5xJH5tawun4mHGZRU1xGIHqErVQZz
      nAoinWFSaSQIdQxTeXvBp3VlGS3jwxh486ecvaueO/LGjp8/D2ULfKkBz0IWlfYx4AIfDOK7
      dQGeK5M+FlVMp38g7QClDhWRTq58aSRCdAxX4syeqCuZWqZP9gL+V0NtNB+vYm1jHhAdMzWc
      nIbXmz7iweOJ8H4vJJNJvN6cMdtP8/RwrgeYe3mklCpnkJawi9/vIRHqgKoHmcWBccuIxWLm
      8qLRqDn+WZDBYSTo/lkX/rpG8ozZG7IvEo+nj7i4biklxZAdySYeTwCpOC66JdxYMvYYPsfP
      YEsY17+Qt4+BU58D58efKzc3d9xYLBYjPz//k1zYlJC5YfQepKUtxDttQV5LHw+2s7ShifrZ
      cOr0ANwyejtxw5yIFHGXB5hVwMCx07jL/KO3kwFOvPURhSuvOofPwT/YQvjCMB1Jh/ocZFTm
      hlEcYFNTIG0gwr6nfsmcJx6iEiBRTdEzzbQu/gbVhXFO7tnNqdvWsAbgluUsee0l9py8idXl
      Xvpbm9mfv4Qt4z54H45/kL2vt5N0HkBdpGRuGNeSU0ndA++w/ZlHeDXuoWjp/WxcN390spTA
      +nvYuXUzjX0u3rJVbGioMj94n+MnsivMinuVRbqskZGRkclexFQUi8XMZ4/Piox/XZXJ8T81
      VksS4TD/0wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Causes of Death - Dash' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Deaths by Causes' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Diseases Over Time' width='192'>
      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
      /A+4R5tPLtkDnQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Forecasting' width='192'>
      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
      xdefCoBhmJiOxcuvvyL7h7/HBgyrRH//Ia2tTXSmedEd4s+mZJaPNRthe2u8f69Fr3/EaDKl
      89FHMhO8hHqZCb74+jP/11AzvHKDV8+dhlXkR389E7zTOfPBZCZYvGvOCICmttamumFRuPx+
      hLhUp7atg+ePePhsAMlUXgkW196pAKQpGCqGDBmKF9feqV2g1s27/Ozm3avoRYhLJ692iVyT
      AIhckwCIXJMAiFyTAIhckwCIXJMAiFyTAIhckwCIXJMAiFyTAIhckwCIXJMAiFyb70bZJ7dJ
      Xe/cwskmPH3Z5+atLSZhRjg4oNqo8/jRAXfe67C5vn7RPQuxNGfeJ/i7VDzg2WGG1hGWTnGU
      otzZZdTtEo0HzLSNlcXM4pi11hbtQRez08FccCh+kVnYV4tlGMaV9SDLsBo9nFc/VwC01jx/
      8g3N9Q2U0hz2htSKJvuDgLrvYHtreAWb2fR4QL7iFWQofgn1MhR/8fVzPaphGHRu3n79se/7
      ANS/MwNfKsn7SYt3ixwEi1yTAIhckwCIXJMAiFyTAIhckwCIXJMAiFyTAIhckwCIXJMAiFyT
      AIhckwCIXJMAiFyTAIhckwCIXJMAiFybbyZYpTz84gvWd+/iZAF/3utzY6tBmBpEoyOMQpFB
      b0pnd5NGvX7RPQuxNPPNBEdHvBwWUPEQA42PxtnaZnx4QJZqVBYyGkwxbJP2RofqwQuZCV5C
      /XVYhlXoYQkzwRlfPXxIa6uDzlL2jgZs1n2eHQ5p+DZWqY5fsAgmQxy/TnOtIjPBS6iXmeCL
      r58rAG9DAiABWJUezquXg2CRaxIAkWsSAJFrEgCRaxIAkWsSAJFrEgCRaxIAkWsSAJFrEgCR
      axIAkWsSAJFrEgCRaxIAkWsSAJFrEgCRa/NNGWhN9/CAtdY6pk7p9sbUK0XGswwjC1FmAVRK
      pVLBdd0LblmI5ZkrACodM5wkTOM9bB2TRgn9iY2lMsJxn+0bu/zv779ht9Ngp3Mb49mfMTY2
      YIG7RiqlyLLsreu11iw67LZoD8uoNwxjoeW46mVYhR7Oq59vC2BYTEd96q0GmdIMJyFetcQs
      Sllbq/PyYMQP7u9ycNhl77DLjZ0dlGUtPBC+aP0yHuMq6+F4IH6RofhVWIar7uG8+vlmgrUm
      TVMsy0IDWaawLYNMASgM08IAtFYYhoVpGjITvIR6mQm++Po5twAGtuMc/5O//EJsE+CvVzA5
      phbvFlljRa5JAESuSQBErkkARK5JAESuSQBErkkARK5JAESuSQBErkkARK5JAESuSQBErkkA
      RK7NFwCtOdh7Qao0KovZ2+8ShxO6vSGjfpdJGHFweEgURxfcrhDLNd9EWDJiOoPwxR62ilFp
      xqNggqszTNMi677k6YuAzk6dnRt3KLmLXT8uxGWZbwtgOgx7h5goMq05Gk6wdcIkjJkFY5RV
      5Ycf3iSKIvYPuhfcshDLM/dEmNL69WiePvn3qfvYag0nI3wyESYTYavSw6XeJlUrRfTwIebu
      LpbcKDv3y7AKPSx8o+xlf9PLqL8OK891WIZV6OFKAiDEu+DCTteoZMYXXz2h7tkc9cfYRZco
      VrjEmKUaH9678+0Crfn693+gcWOdrx/t4ZhgoHE9jyjK+OTj+2/8nsF4wMvuiDQckhk2STTD
      r9XRszHFxg67G41z67N4xh8fPaVcgME4wrTAsIu0PE0v8fnwzvYbe9j75jFmxef50xcUbJMo
      VvgVH2XY3Lt7G+sNT+bjYY/uICAcdbEcl2kY4xddxpMxnfc+ZrPun/8AWcJXX33JLNHEUYxf
      9QnDGK9gkeLw0QfvvXEZnj95zHg6JZylFIsFojCgudXhYO8ln3zyCbZ5/kKEkyEPHnxNuVFm
      FmYUrBScMh5DEu8Od7arb1iGiD/+6U/MEguVzPDXqgRhQtnRlBubbLbP/z0CdPefc9TrMwlT
      SsUCySzA8spEs5iffvrD1193YS+EmU6R5lqFVrtNOBmhMNFoTNM6+42eDINWq4lbrlO2UrzK
      GlEwJtEOFb8w1/f0Kmv4RYf1dpvRJKTdqDEZTyn4a2y362+st9wijVqZdnudYDKi2WoxGvR4
      sd9lOpnM1UOj2cJ2izQrJZRZpGDE9PojxsMewSx5Y32l1qDkWsfLECS0ayWGkwDXcVDH70Nz
      PgOcUoX1Zo3N9SZBAs2aj+GUKLnznRCwLIsbO5vU17cJpxO2N1pEieLGjVtYc+yOaWD75g0K
      doFquYhbquLokL3ukPF4PFcPrtegVffZbq8xUw61cpFgOmV//2CuetO06Gy1aW7uMJlM2N5o
      kGQG313zLmwLkMUBo9EI13XpvPchdd9iECqKRgzuGc8AWjEIp7hHNqVam831Op5XolUtMgzn
      e1ew8eCI0WTKWrXM/fv3CYdHvH9vk+dPnjKehqxVzj8oT6OA4WiEZdvcunefgpHw4Ucfs1Yu
      EEbz9dAb9YhwsZwS9zob7B/4fLC9zouXB5SLb/5xD44OGAczqn6B+/c/YNQ94NNP7/Dy+Qva
      b3r2B7TSJFFIpbpJMp3w8d0O3WHIdtEk0s5cy5AkCYMQikbCDz/9MQf7B7TLNnu9Ps167c3H
      JEox7PfZ2dkgiBRFM0G7G9y5e48weXOAlNLEswmN7R3Gown3O2X604R2vcZMzbfKpmlKYni4
      OuAnP/0xe3uHfHirQXcUf+vr5BhA5JpcCyRyTQIgck0u2hHXwoPffMbzUcoPPnofhUM8HVBv
      NsnSjGaz+b11cgwgrgWtEv79v/6bNOxR29jlye9+hbFzn3/+x5+de/JBAiCuB60ZjsaQBnQn
      GUbYp7y+y3qjdm6ZBEDk2v8BpguzAhSz9YEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map - Deaths Per Capita' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map - Temperature' width='192'>
      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
      3n8RAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Most deaths - Bubble' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Time series' width='192'>
      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
      JQAi0P4NH0c7o0p5zX0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top Causes' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
